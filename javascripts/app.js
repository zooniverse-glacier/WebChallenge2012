// Generated by CoffeeScript 1.3.3
(function() {

  window.App = {};

  $(function() {
    var map;
    console.log(L);
    return map = new window.App.Map({
      element: 'map'
    });
  });

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Model,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __slice = [].slice;

  Model = (function() {

    function Model(opts) {
      this.fromJSON = __bind(this.fromJSON, this);

      this.fetch = __bind(this.fetch, this);
      this.id = opts.id || opts.data.id;
      if (opts.data != null) {
        this.fromJSON(opts.data);
      }
    }

    Model.base_url = 'pedapi.herokuapp.com';

    Model.prototype.trigger = function() {
      var args, event;
      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return this.constructor.trigger(event, args);
    };

    Model.trigger = function() {
      var args, event;
      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return $(document).trigger(event, args);
    };

    Model.prototype.on = function(event, callback) {
      return this.constructor.trigger(event(callback));
    };

    Model.on = function(event, callback) {
      return $(document).on(event, function() {
        var args, event;
        event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
        return callback(args);
      });
    };

    Model.prototype.fetch = function() {
      var _this = this;
      return $.getJSON("https://" + this.constructor.base_url + "/" + this.constructor.url + "/" + this.id + ".json?callback=?", function(data) {
        _this.fromJSON(data);
        return _this.trigger('fetch', _this);
      });
    };

    Model.prototype.fromJSON = function(data) {
      var key, value, _results;
      _results = [];
      for (key in data) {
        value = data[key];
        _results.push(this[key] = value);
      }
      return _results;
    };

    Model.fetchAll = function() {
      var _this = this;
      return $.getJSON("https://" + this.base_url + "/" + this.url + ".json?callback=?", function(data) {
        var datum, models, _i, _len;
        models = new Array;
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          datum = data[_i];
          models.push(new _this({
            data: datum
          }));
        }
        return _this.trigger('fetch-all', models);
      });
    };

    Model.fetchById = function(id) {
      return $.getJSON("https://" + this.base_url + "/" + this.url + "/" + id + ".json?callback=?", function(data) {
        var model;
        model = new this({
          data: data
        });
        return this.trigger('fetch', model);
      });
    };

    return Model;

  })();

  window.App.Model = Model;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Map,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Map = (function(_super) {

    __extends(Map, _super);

    function Map(opts) {
      Map.__super__.constructor.call(this, opts);
      this.el = opts.element;
      opts.lat || (opts.lat = 1.37);
      opts.lng || (opts.lng = 32.29);
      this.defaultZoom = opts.zoom || 13;
      this.styleUrl = opts.styleUrl || "http://{s}.tile.cloudmade.com/703a104d15d44e2885f6cedeaaec6d30/78177/256/{z}/{x}/{y}.png";
      this.center = new L.LatLng(opts.lat, opts.lng);
      this.setupMap();
    }

    Map.prototype.setupMap = function() {
      this.map = L.map(this.el, {
        zoom: 13
      });
      this.map.setView(this.center, this.defaultZoom);
      this.mainTileLayer = L.tileLayer(this.styleUrl);
      return this.mainTileLayer.addTo(this.map);
    };

    return Map;

  })(window.App.Model);

  window.App.Map = Map;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var ProgressMeter,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ProgressMeter = (function(_super) {

    __extends(ProgressMeter, _super);

    ProgressMeter.prototype.base_image = 'url';

    ProgressMeter.prototype.stage_urls = ['url_1', 'url_2', 'url_3'];

    function ProgressMeter(opts) {
      this.setupMeter = __bind(this.setupMeter, this);
      this.el = $(opts.el);
      this.stage = opts.stage || 0;
    }

    ProgressMeter.prototype.setupMeter = function() {
      var img_src, _i, _len, _ref;
      this.el.append('img').attr('src', this.base_image);
      _ref = this.stage_urls;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        img_src = _ref[_i];
        this.el.append('img').attr('src', img_src).hide();
      }
      if (this.stage === 1) {
        this.el.children().get(this.stage).show();
      }
      if (this.stage === 2) {
        this.el.children().get(this.stage).show();
      }
      if (this.stage === 3) {
        return this.el.children().get(this.stage).show();
      }
    };

    return ProgressMeter;

  })(window.App);

  window.App.ProgressMeter = ProgressMeter;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Project;

  Project = (function() {

    function Project(opts) {
      var key, value, _i, _len;
      for (value = _i = 0, _len = opts.length; _i < _len; value = ++_i) {
        key = opts[value];
        this[key] = value;
      }
    }

    return Project;

  })();

  window.App.Project = Project;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var School,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  School = (function(_super) {

    __extends(School, _super);

    function School(opts) {
      this.fromJSON = __bind(this.fromJSON, this);
      School.__super__.constructor.call(this, opts);
      this.projects = new Array;
    }

    School.url = 'schools';

    School.prototype.fromJSON = function(data) {
      var key, project, value, _i, _len, _ref, _results;
      for (key in data) {
        value = data[key];
        if (key !== 'projects') {
          this[key] = value;
        }
      }
      _ref = data['projects'];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        project = _ref[_i];
        _results.push(this.projects.push(new window.App.Project(project)));
      }
      return _results;
    };

    return School;

  })(window.App.Model);

  window.App.School = School;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var University,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  University = (function(_super) {

    __extends(University, _super);

    function University(opts) {
      University.__super__.constructor.call(this, opts);
    }

    University.prototype.url = 'universities';

    return University;

  })(window.App.Model);

  window.App.University = University;

}).call(this);
