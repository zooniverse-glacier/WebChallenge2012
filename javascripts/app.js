// Generated by CoffeeScript 1.3.3
(function() {

  window.App = {};

  $(function() {
    var boardContoller, el, imageCarousel, schoolController, teamController, universityController, _i, _len, _ref, _results;
    if (location.pathname === '/schools.html') {
      schoolController = new App.SchoolController();
      universityController = new App.UniversityController();
    } else if (location.pathname === '/' || location.pathname === '/index.html') {
      imageCarousel = new App.CarouselController();
    } else if (location.pathname === '/about.html') {
      boardContoller = new App.PeopleController('board');
      teamController = new App.PeopleController('team');
    }
    _ref = $('.countdown');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      el = _ref[_i];
      _results.push(new App.Countdown({
        el: el,
        target: new Date(2013, 0, 15)
      }));
    }
    return _results;
  });

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Events,
    __slice = [].slice;

  Events = (function() {

    function Events() {}

    Events.prototype.trigger = function() {
      var args, event;
      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return this.constructor.trigger(event, args);
    };

    Events.trigger = function() {
      var args, event;
      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return $(document).trigger(event, args);
    };

    Events.prototype.on = function(event, callback) {
      return this.constructor.trigger(event(callback));
    };

    Events.on = function(event, callback) {
      return $(document).on(event, function(event, args) {
        return callback(args);
      });
    };

    return Events;

  })();

  window.App.Events = Events;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Model,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Model = (function(_super) {

    __extends(Model, _super);

    function Model(opts) {
      this.fromJSON = __bind(this.fromJSON, this);

      this.fetch = __bind(this.fetch, this);
      this.id = opts.id || opts.data.id;
      if (opts.data != null) {
        this.fromJSON(opts.data);
      }
    }

    Model.base_url = 'pedapi.herokuapp.com';

    Model.prototype.fetch = function() {
      var _this = this;
      return $.getJSON("https://" + this.constructor.base_url + "/" + this.constructor.url + "/" + this.id + ".json?callback=?", function(data) {
        _this.fromJSON(data);
        return _this.trigger('fetch', _this);
      });
    };

    Model.prototype.fromJSON = function(data) {
      var key, value, _results;
      _results = [];
      for (key in data) {
        value = data[key];
        _results.push(this[key] = value);
      }
      return _results;
    };

    Model.all = function() {
      return Model.models;
    };

    Model.fetchAll = function() {
      var _this = this;
      return $.getJSON("https://" + this.base_url + "/" + this.url + ".json?callback=?", function(data) {
        var datum, _i, _len;
        _this.models = new Array;
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          datum = data[_i];
          _this.models.push(new _this({
            data: datum
          }));
        }
        return _this.trigger('fetch-all' + _this.url, _this.models);
      });
    };

    Model.fetchById = function(id) {
      return $.getJSON("https://" + this.base_url + "/" + this.url + "/" + id + ".json?callback=?", function(data) {
        var model;
        model = new this({
          data: data
        });
        return this.trigger('fetch', model);
      });
    };

    return Model;

  }).call(this, window.App.Events);

  window.App.Model = Model;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Controller,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Controller = (function() {

    function Controller(selector, model) {
      var _this = this;
      this.selector = selector;
      this.model = model;
      this.start = __bind(this.start, this);

      this.startList = __bind(this.startList, this);

      this.renderOne = __bind(this.renderOne, this);

      this.renderAll = __bind(this.renderAll, this);

      this.route = __bind(this.route, this);

      this.stopRouting = __bind(this.stopRouting, this);

      this.startRouting = __bind(this.startRouting, this);

      this.el = $(this.selector);
      this.models = new Object;
      this.model.on('fetch-all' + this.model.url, function(models) {
        var _i, _len;
        for (_i = 0, _len = models.length; _i < _len; _i++) {
          model = models[_i];
          _this.models[model.slug] = model;
        }
        return _this.startRouting();
      });
      this.model.fetchAll();
    }

    Controller.prototype.startRouting = function() {
      $(window).on('hashchange', this.route);
      return this.route();
    };

    Controller.prototype.stopRouting = function() {
      return $(window).off('hashchange');
    };

    Controller.prototype.route = function() {
      var hash, slug;
      hash = location.hash;
      if (hash === '') {
        return this.renderAll();
      } else {
        slug = hash.substr(2, hash.length - 2);
        return this.renderOne(this.models[slug]);
      }
    };

    Controller.prototype.renderAll = function() {
      var compiled, header, key, model;
      compiled = (function() {
        var _ref, _results;
        _ref = this.models;
        _results = [];
        for (key in _ref) {
          model = _ref[key];
          _results.push(this.listTemplate(model));
        }
        return _results;
      }).call(this);
      this.el.html(compiled.join(" "));
      header = "<section class=\"normal\">\n  <h1><strong>Uganda</strong></h1>\n</section>";
      this.el.prepend(header);
      return this.startList(this.models);
    };

    Controller.prototype.renderOne = function(model) {
      var header;
      this.el.html(this.itemTemplate(model));
      header = "<section class=\"normal\">\n  <h1><strong>" + model.name + "</strong></h1>\n</section>";
      this.el.prepend(header);
      return this.start(model);
    };

    Controller.prototype.startList = function() {};

    Controller.prototype.start = function() {};

    return Controller;

  })();

  window.App.Controller = Controller;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var CarouselController,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  CarouselController = (function() {

    function CarouselController() {
      this.goToNext = __bind(this.goToNext, this);

      this.goToItem = __bind(this.goToItem, this);

      this.render = __bind(this.render, this);

      this.controls = __bind(this.controls, this);

      this.template = __bind(this.template, this);

      var _this = this;
      this.el = $('.carousel');
      this.item = 0;
      this.el.addClass(this.item);
      this.forward = true;
      this.count = -1;
      this.countArray = ['first', 'second', 'third', 'fourth'];
      window.App.WordpressFeed.on('feed-loaded:events', function(feed) {
        _this.feed = feed;
        return _this.render();
      });
      window.App.WordpressFeed.fetch(4, 'events');
    }

    CarouselController.prototype.template = function(feedItem) {
      this.count += 1;
      return "<div class=\"carousel-item " + this.countArray[this.count] + "\">\n  <img src=\"" + feedItem.image + "\" alt=\"" + feedItem.description + "\" />\n  <div class=\"carousel-details\">\n    <h2 class=\"carousel-title\">" + feedItem.title + "</h2>\n    <p class=\"carousel-description\">" + feedItem.description + "</p>\n    <a href=\"" + feedItem.url + " class=\"carousel-link\">" + feedItem.linkText + "</a>\n  </div>\n</div>";
    };

    CarouselController.prototype.controls = function() {
      var num, radios, _i;
      radios = new String;
      for (num = _i = 0; _i <= 3; num = ++_i) {
        radios = radios + ("<input type=\"radio\" name=\"carousel\" value=\"" + num + "\">");
      }
      return '<div class="carousel-controls">' + radios + "</div>";
    };

    CarouselController.prototype.render = function() {
      var item, _i, _len, _ref;
      _ref = this.feed;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        this.el.append(this.template(item));
      }
      this.el.append(this.controls());
      this.el.find("input[value=\"" + this.item + "\"]").prop('checked', true);
      this.el.find('input[name="carousel"]').on('click', this.goToItem);
      return this.timerId = setInterval(this.goToNext, 10000);
    };

    CarouselController.prototype.goToItem = function(e) {
      clearInterval(this.timerId);
      this.el.removeClass(this.countArray[this.item]);
      this.item = e.currentTarget.value;
      return this.el.addClass(this.countArray[this.item]);
    };

    CarouselController.prototype.goToNext = function() {
      this.el.removeClass(this.countArray[this.item]);
      if (this.forward) {
        if (this.item < 3) {
          this.item += 1;
        } else {
          this.forward = false;
          this.item -= 1;
        }
      } else {
        if (this.item > 0) {
          this.item -= 1;
        } else {
          this.forward = true;
          this.item += 1;
        }
      }
      this.el.find("input[value=\"" + this.item + "\"]").prop('checked', true);
      return this.el.addClass(this.countArray[this.item]);
    };

    return CarouselController;

  })();

  window.App.CarouselController = CarouselController;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Controller,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Controller = (function() {

    function Controller(selector, model) {
      var _this = this;
      this.selector = selector;
      this.model = model;
      this.start = __bind(this.start, this);

      this.startList = __bind(this.startList, this);

      this.renderOne = __bind(this.renderOne, this);

      this.renderAll = __bind(this.renderAll, this);

      this.route = __bind(this.route, this);

      this.stopRouting = __bind(this.stopRouting, this);

      this.startRouting = __bind(this.startRouting, this);

      this.el = $(this.selector);
      this.models = new Object;
      this.model.on('fetch-all' + this.model.url, function(models) {
        var _i, _len;
        for (_i = 0, _len = models.length; _i < _len; _i++) {
          model = models[_i];
          _this.models[model.slug] = model;
        }
        return _this.startRouting();
      });
      this.model.fetchAll();
    }

    Controller.prototype.startRouting = function() {
      $(window).on('hashchange', this.route);
      return this.route();
    };

    Controller.prototype.stopRouting = function() {
      return $(window).off('hashchange');
    };

    Controller.prototype.route = function() {
      var hash, slug;
      hash = location.hash;
      if (hash === '') {
        return this.renderAll();
      } else {
        slug = hash.substr(2, hash.length - 2);
        return this.renderOne(this.models[slug]);
      }
    };

    Controller.prototype.renderAll = function() {
      var compiled, header, key, model;
      compiled = (function() {
        var _ref, _results;
        _ref = this.models;
        _results = [];
        for (key in _ref) {
          model = _ref[key];
          _results.push(this.listTemplate(model));
        }
        return _results;
      }).call(this);
      this.el.html(compiled.join(" "));
      header = "<section class=\"normal\">\n  <h1><strong>Uganda</strong></h1>\n</section>";
      this.el.prepend(header);
      return this.startList(this.models);
    };

    Controller.prototype.renderOne = function(model) {
      var header;
      this.el.html(this.itemTemplate(model));
      header = "<section class=\"normal\">\n  <h1><strong>" + model.name + "</strong></h1>\n</section>";
      this.el.prepend(header);
      return this.start(model);
    };

    Controller.prototype.startList = function() {};

    Controller.prototype.start = function() {};

    return Controller;

  })();

  window.App.Controller = Controller;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Countdown,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Countdown = (function() {

    Countdown.prototype.target = +new Date() + 1000 * 60 * 60 * 24 * 7;

    Countdown.prototype.el = null;

    Countdown.prototype.tagName = 'span';

    Countdown.prototype.className = 'its-the-final-countdown';

    Countdown.prototype.template = '<span class="weeks number"></span>\n<span class="weeks number"></span>\n<span class="separator">:</span>\n<span class="days number"></span>\n<span class="days number"></span>\n<span class="separator">:</span>\n<span class="hours number"></span>\n<span class="hours number"></span>\n<span class="separator">:</span>\n<span class="minutes number"></span>\n<span class="minutes number"></span>\n<span class="separator">:</span>\n<span class="seconds number"></span>\n<span class="seconds number"></span>';

    function Countdown(params) {
      var key, value, _ref;
      if (params == null) {
        params = {};
      }
      this.tick = __bind(this.tick, this);

      for (key in params) {
        value = params[key];
        this[key] = value;
      }
      this.target = +this.target;
      if ((_ref = this.el) == null) {
        this.el = "<" + this.tagName + "></" + this.tagName + ">";
      }
      this.el = $(this.el);
      this.el.html(this.template);
      this.el.addClass(this.className);
      this.tick();
    }

    Countdown.prototype.tick = function() {
      var days, hours, minutes, ms, seconds, weeks;
      ms = this.target - new Date();
      seconds = Math.floor(ms / 1000);
      minutes = Math.floor(seconds / 60);
      seconds = Math.floor(seconds - (minutes * 60));
      hours = Math.floor(minutes / 60);
      minutes = Math.floor(minutes - (hours * 60));
      days = Math.floor(hours / 24);
      hours = Math.floor(hours - (days * 24));
      weeks = Math.floor(days / 7);
      days = Math.floor(days - (weeks * 7));
      this.render({
        weeks: weeks,
        days: days,
        hours: hours,
        minutes: minutes,
        seconds: seconds
      });
      return setTimeout(this.tick, 1000);
    };

    Countdown.prototype.render = function(times) {
      var container, digit, i, unit, unitContainers, value, _results;
      _results = [];
      for (unit in times) {
        value = times[unit];
        unitContainers = this.el.find("." + unit + ".number");
        value = ("000" + value).slice(-2).split('');
        _results.push((function() {
          var _i, _len, _results1;
          _results1 = [];
          for (i = _i = 0, _len = value.length; _i < _len; i = ++_i) {
            digit = value[i];
            container = unitContainers.eq(i);
            if (container.html() !== digit) {
              container.addClass('flip');
              setTimeout($.proxy(container, 'removeClass', 'flip'), 50);
              _results1.push(container.html(digit));
            } else {
              _results1.push(void 0);
            }
          }
          return _results1;
        })());
      }
      return _results;
    };

    return Countdown;

  })();

  window.App.Countdown = Countdown;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Events,
    __slice = [].slice;

  Events = (function() {

    function Events() {}

    Events.prototype.trigger = function() {
      var args, event;
      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return this.constructor.trigger(event, args);
    };

    Events.trigger = function() {
      var args, event;
      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return $(document).trigger(event, args);
    };

    Events.prototype.on = function(event, callback) {
      return this.constructor.trigger(event(callback));
    };

    Events.on = function(event, callback) {
      return $(document).on(event, function(event, args) {
        return callback(args);
      });
    };

    return Events;

  })();

  window.App.Events = Events;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Map,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Map = (function() {

    function Map(opts) {
      this.centerSchool = __bind(this.centerSchool, this);

      this.addSchool = __bind(this.addSchool, this);
      this.el = opts.element;
      this.schoolZoom = 10;
      this.defaultZoom = opts.lat && opts.lng ? this.schoolZoom : 7;
      opts.lat || (opts.lat = 1.37);
      opts.lng || (opts.lng = 32.29);
      this.styleUrl = opts.styleUrl || "http://{s}.tile.cloudmade.com/703a104d15d44e2885f6cedeaaec6d30/40699/256/{z}/{x}/{y}.png";
      this.center = new L.LatLng(opts.lat, opts.lng);
      this.setupMap();
    }

    Map.prototype.setupMap = function() {
      if ($("#" + this.el).length > 0) {
        this.map = L.map(this.el, {
          zoom: this.defaultZoom
        });
        this.map.setView(this.center, this.defaultZoom);
        this.mainTileLayer = L.tileLayer(this.styleUrl);
        this.mainTileLayer.addTo(this.map);
        return this.markerIcon = new L.icon({
          iconUrl: "images/map-point.png",
          iconSize: new L.Point(14, 16)
        });
      } else {
        return console.log("could not find a map div");
      }
    };

    Map.prototype.addSchool = function(school) {
      var marker, pos;
      pos = new L.LatLng(school.lat, school.lng);
      marker = new L.marker(pos, {
        icon: this.markerIcon
      });
      return marker.addTo(this.map);
    };

    Map.prototype.centerSchool = function(school) {
      var center;
      center = new L.LatLng(school.lat, school.lng);
      return this.map.setView(center, this.schoolZoom);
    };

    Map.prototype.renderPopUp = function(school) {
      var template;
      return template = "<div class='schoolMapDetails'>\n  <img src='" + school.imageUrl + "'> </img>\n  <h1>" + school.name + "</h1>\n  <p>" + school.description + "</p>\n</div>";
    };

    return Map;

  })();

  window.App.Map = Map;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var MarkFudge;

  MarkFudge = (function() {

    function MarkFudge() {}

    MarkFudge.fudge = function() {
      var _this = this;
      return $(".markdownSection").each(function(index, d) {
        var html;
        html = _this.generateHTML($(d).html().replace(/^\s+/, ''));
        $(d).html(html);
        return $(d).show();
      });
    };

    MarkFudge.generateHTML = function(mark) {
      return marked(mark);
    };

    return MarkFudge;

  })();

  window.App.MarkFudge = MarkFudge;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var PeopleController,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  PeopleController = (function(_super) {

    __extends(PeopleController, _super);

    function PeopleController(personType) {
      this.personType = personType;
      this.renderAll = __bind(this.renderAll, this);

      PeopleController.__super__.constructor.call(this, "." + this.personType, window.App.Person);
    }

    PeopleController.prototype.renderAll = function() {
      var key, model, roles, _ref, _ref1;
      roles = this.personType === 'board' ? ['board_member'] : ['team', 'director', 'intern'];
      _ref = this.models;
      for (key in _ref) {
        model = _ref[key];
        if (_ref1 = model.role, __indexOf.call(roles, _ref1) >= 0) {
          this.el.append(this.listTemplate(model));
        }
      }
      return this.startList();
    };

    PeopleController.prototype.listTemplate = function(model) {
      return "<section class=\"board normal\">\n  <img src=\"" + model.image + " || '//placehold.it/235x160.png'}\" width=\"235\" height=\"160\" />\n  <div class=\"popup\">\n    <span class=\"name\">" + model.name + "</span>\n    <span class=\"email\">" + model.email + "</span>\n    <span class=\"bio\">" + model.bio + "</span>\n  </div>\n</section>";
    };

    return PeopleController;

  })(window.App.Controller);

  window.App.PeopleController = PeopleController;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Person,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Person = (function(_super) {

    __extends(Person, _super);

    function Person(opts) {
      Person.__super__.constructor.call(this, opts);
    }

    Person.url = 'people';

    return Person;

  })(window.App.Model);

  window.App.Person = Person;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var PowerfulController,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  PowerfulController = (function() {

    function PowerfulController() {
      this.template = __bind(this.template, this);

      var _this = this;
      this.el = $('.powerful');
      window.App.WordpressFeed.on('feed-loaded:powerful', function(feed) {
        _this.feed = feed;
        return _this.render();
      });
      window.App.WordpressFeed.fetch(10, 'powerful');
    }

    PowerfulController.prototype.template = function(feedItem) {
      this.count += 1;
      return "<div class=\"two columns\">\n  <div class=\"narrow column\">\n    <figure>\n      <img src=\"" + feedItem.image + "\" />\n    </figure>\n  </div>\n<div class=\"wide column\">";
    };

    return PowerfulController;

  })();

  window.App.PowerfulController = PowerfulController;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var ProgressMeter,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ProgressMeter = (function(_super) {

    __extends(ProgressMeter, _super);

    ProgressMeter.prototype.base_image = 'url';

    ProgressMeter.prototype.stage_urls = ['url_1', 'url_2', 'url_3'];

    function ProgressMeter(opts) {
      this.setupMeter = __bind(this.setupMeter, this);
      this.el = $(opts.el);
      this.stage = opts.stage || 0;
    }

    ProgressMeter.prototype.setupMeter = function() {
      var img_src, _i, _len, _ref;
      this.el.append('img').attr('src', this.base_image);
      _ref = this.stage_urls;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        img_src = _ref[_i];
        this.el.append('img').attr('src', img_src).hide();
      }
      if (this.stage === 1) {
        this.el.children().get(this.stage).show();
      }
      if (this.stage === 2) {
        this.el.children().get(this.stage).show();
      }
      if (this.stage === 3) {
        return this.el.children().get(this.stage).show();
      }
    };

    return ProgressMeter;

  })(window.App);

  window.App.ProgressMeter = ProgressMeter;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Project;

  Project = (function() {

    function Project(opts) {
      var key, value, _i, _len;
      for (value = _i = 0, _len = opts.length; _i < _len; value = ++_i) {
        key = opts[value];
        this[key] = value;
      }
    }

    return Project;

  })();

  window.App.Project = Project;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var School,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  School = (function(_super) {

    __extends(School, _super);

    function School(opts) {
      this.fromJSON = __bind(this.fromJSON, this);
      School.__super__.constructor.call(this, opts);
    }

    School.url = 'schools';

    School.prototype.fromJSON = function(data) {
      var key, value, _results;
      _results = [];
      for (key in data) {
        value = data[key];
        if (key !== 'projects') {
          _results.push(this[key] = value);
        }
      }
      return _results;
    };

    return School;

  })(window.App.Model);

  window.App.School = School;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var SchoolController, template,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  template = function(school) {
    return "";
  };

  SchoolController = (function(_super) {

    __extends(SchoolController, _super);

    function SchoolController() {
      this.start = __bind(this.start, this);

      this.startList = __bind(this.startList, this);

      this.renderAll = __bind(this.renderAll, this);
      SchoolController.__super__.constructor.call(this, '.schools', window.App.School);
    }

    SchoolController.prototype.renderAll = function() {
      var compiled, header, key, model;
      compiled = (function() {
        var _ref, _results;
        _ref = this.models;
        _results = [];
        for (key in _ref) {
          model = _ref[key];
          _results.push(this.listTemplate(model));
        }
        return _results;
      }).call(this);
      this.el.html(compiled.join(" "));
      header = "<section class=\"normal\">\n  <h1><strong>Uganda</strong></h1>\n</section>";
      this.el.prepend(header);
      return this.startList(this.models);
    };

    SchoolController.prototype.listTemplate = function(model) {
      var progress, progress_text;
      progress = 'begin';
      progress_text = '';
      if (model.phase_1_complete) {
        progress = 'one-third';
        progress_text = 'Phase 1: Complete';
      } else if (model.phase_2_complete) {
        progress = 'two-thirds';
        progress_text = 'Phase 2: Complete';
      } else if (model.phase_3_complete) {
        progress = 'complete';
        progress_text = 'Phase 3: Complete';
      }
      return "<section class=\"school normal\">\n  <div class=\"image\">\n    <figure>\n      <div class=\"progress " + progress + "\"></div>\n      <img src=\"" + (model.image_url || '//placehold.it/128.png') + "\" />\n    </figure>\n    <figcaption>" + progress_text + "</figcaption>\n  </div>\n\n  <div class=\"content\">\n    <header>\n      <div class=\"name\">" + model.name + "</div class=\"name\">\n      <div class=\"location\">Kampala, Uganda</div>\n    </header>\n    <p>" + model.story + "</p>\n    <p class='schoolClassStats'>\n    <div class='storyButtons'>\n        <p><a href=\"#/" + model.slug + "\" class=\"standard-button green\">View site</a></p>\n        <p class='social'><a style='color:black' target='_blank' href=\"" + (App.SocialNetworks.twitterHref(model.name, window.location + '#' + model.slug)) + "\"><i class='icon-twitter'> </i></a></p>\n        <p class='social'><a style='color:black' target='_blank' href=\"" + (App.SocialNetworks.twitterHref(model.name, model.slug)) + "\"><i class='icon-facebook-squared'> </i></a></p>\n    </div>  \n  </div>\n</section>";
    };

    SchoolController.prototype.itemTemplate = function(model) {
      var progress, progress_text;
      $('.project-list.universities').hide();
      progress = 'begin';
      progress_text = '';
      if (model.phase_1_complete) {
        progress = 'one-third';
        progress_text = 'Phase 1: Complete';
      }
      if (model.phase_2_complete) {
        progress = 'two-thirds';
        progress_text = 'Phase 2: Complete';
      }
      if (model.phase_3_complete) {
        progress = 'complete';
        progress_text = 'Phase 3: Complete';
      }
      return "<section class=\"school normal\">\n  <div class=\"image\">\n    <figure>\n      <div class=\"progress #(progress}\"></div>\n      <img src=\"" + (model.image_url || '//placehold.it/128.png') + "\">\n    </figure>\n  </div>\n\n  <div class=\"content\">\n    <header>\n      <div class=\"name\">" + model.name + "</div class=\"name\">\n      <div class=\"location\">Kampala, Uganda</div>\n    </header>\n    <p>" + model.story + "</p>\n     <div class='storyButtons'>\n        <p class='social'><a target='_blank' href=\"" + (App.SocialNetworks.twitterHref(model.name, window.location)) + "\"><i class='icon-twitter'> </i></a></p>\n        <p class='social'><a target='_blank' href=\"" + (App.SocialNetworks.twitterHref(model.name, model.slug)) + "\"><i class='icon-facebook-squared'> </i></a></p>\n    </div>  \n  </div>\n</section>\n\n<section class=\"normal\">\n  <h1><strong>Project Timeline</strong></h1>\n  <div id=\"school_timeline\"></div>\n</section>";
    };

    SchoolController.prototype.startList = function(schools) {
      var hash, schoolForMap, _ref, _results;
      if (!this.map) {
        this.map = new window.App.Map({
          element: 'map'
        });
      }
      _ref = this.models;
      _results = [];
      for (hash in _ref) {
        schoolForMap = _ref[hash];
        _results.push(this.map.addSchool(schoolForMap));
      }
      return _results;
    };

    SchoolController.prototype.start = function(school) {
      var hash, schoolForMap, _ref;
      if (!this.map) {
        this.map = new window.App.Map({
          element: 'map',
          lat: school.lat,
          lng: school.lng
        });
      }
      _ref = this.models;
      for (hash in _ref) {
        schoolForMap = _ref[hash];
        this.map.addSchool(schoolForMap);
      }
      this.map.centerSchool(school);
      if (this.currentTimeLine) {
        this.currentTimeLine.remove();
        delete this.currentTimeLine;
      }
      return this.currentTimeLine = new window.App.Timeline(school, "#school_timeline");
    };

    return SchoolController;

  })(window.App.Controller);

  window.App.SchoolController = SchoolController;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var SocialNetworks;

  SocialNetworks = (function() {

    function SocialNetworks() {}

    SocialNetworks.facebookHref = function() {
      var image, summary, title;
      title = 'Snapshot Serengeti';
      summary = 'I just classified this image on Snapshot Serengeti!';
      image = $("<a href='" + this.location.standard[0] + "'></a>").get(0).href;
      return "https://www.facebook.com/sharer/sharer.php\n?s=100\n&p[url]=" + (this.talkHref()) + "\n&p[title]=" + (encodeURIComponent(title)) + "\n&p[summary]=" + (encodeURIComponent(summary)) + "\n&p[images][0]=" + image;
    };

    SocialNetworks.twitterHref = function(orgName, url) {
      var message;
      message = "Check out the great work that Pangea Education is doing with " + orgName + " " + url + " #PangeaEducation";
      return "http://twitter.com/home?status=" + (encodeURIComponent(message));
    };

    SocialNetworks.pinterestHref = function() {
      return "http://pinterest.com/pin/create/button/?url=" + (this.talkHref());
    };

    return SocialNetworks;

  })();

  window.App.SocialNetworks = SocialNetworks;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Timeline,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Timeline = (function() {

    Timeline.prototype.base_image = 'url';

    Timeline.prototype.stage_colors = ['#29A8E0', '#80D017', '#FAAD18'];

    function Timeline(school, el) {
      this.render = __bind(this.render, this);

      this.showStep = __bind(this.showStep, this);

      this.animate = __bind(this.animate, this);

      this.remove = __bind(this.remove, this);

      var _this = this;
      this.school = school;
      this.el = $(el);
      this.width = this.el.width();
      this.startTime = moment(school.events[0].date).subtract('days', 20);
      this.endTime = moment(school.events[school.events.length - 1].date).add('days', 20);
      this.totalDays = moment(this.startTime).diff(this.endTime, 'days');
      this.render();
      this.currentlySelectedId = 0;
      this.animating = true;
      this.animate();
      $(".marker").hover(function(e) {
        _this.showStep($(e.currentTarget).data().id);
        clearTimeout(_this.currentTimeout);
        return _this.animating = false;
      }, function(e) {
        _this.animating = true;
        return _this.animate();
      });
    }

    Timeline.prototype.remove = function() {
      this.el.remove();
      return clearTimeout(this.currentTimeout);
    };

    Timeline.prototype.convertX = function(event) {
      this.days = moment(this.startTime).diff(event.date, 'days');
      return (this.days * 1.0 / (1.0 * this.totalDays)) * this.width;
    };

    Timeline.prototype.animate = function() {
      if (this.animating) {
        this.currentTimeout = setTimeout(this.animate, 2000);
      }
      this.currentlySelectedId = (this.currentlySelectedId + 1) % this.school.events.length;
      return this.showStep();
    };

    Timeline.prototype.showStep = function(number) {
      if (number == null) {
        number = null;
      }
      if (number) {
        this.currentlySelectedId = number;
      }
      $(".marker").removeClass('active');
      return $(".marker" + this.currentlySelectedId).addClass('active');
    };

    Timeline.prototype.render = function() {
      var content, event, index, markers;
      markers = (function() {
        var _i, _len, _ref, _results;
        _ref = this.school.events;
        _results = [];
        for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
          event = _ref[index];
          _results.push(this.renderEvent(event, index));
        }
        return _results;
      }).call(this);
      content = "<div class='timeline'>\n    <div class='bar'></div>\n    <ul class='inner'> \n        <li class='marker stage0' style='left:0px'><div style='background-color:black' class='markerInner'></div></li>\n          " + (markers.join(" ")) + "\n        <li class='marker stage0' style='right: 0'><div  style='background-color:black' class='markerInner'></div></li>\n    </ul>\n</div>";
      return this.el.html(content);
    };

    Timeline.prototype.renderEvent = function(event, id) {
      var stage, stageCol, tooltip, xPoint;
      xPoint = this.convertX(event);
      stage = event.phase;
      stageCol = this.stage_colors[stage - 1];
      tooltip = "<div class='tooltip'>\n  <p class='phase'>Phase " + event.phase + "</p>\n  <p class='date'>" + (moment(event.date).format("MMM Do YYYY")) + "</p>\n  <p class='event'>" + event.description + "</p>\n</div>";
      return "<li class='marker marker" + id + " stage" + stage + "' data-id=" + id + " style='left:" + xPoint + "px'> " + tooltip + " <div style='background-color:" + stageCol + "' class='markerInner'></div></li>";
    };

    return Timeline;

  })();

  window.App.Timeline = Timeline;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var University,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  University = (function(_super) {

    __extends(University, _super);

    function University(opts) {
      University.__super__.constructor.call(this, opts);
    }

    University.url = 'universities';

    return University;

  })(window.App.Model);

  window.App.University = University;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var UniversityController,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  UniversityController = (function(_super) {

    __extends(UniversityController, _super);

    function UniversityController() {
      this.renderAll = __bind(this.renderAll, this);
      UniversityController.__super__.constructor.call(this, '.universities', window.App.University);
    }

    UniversityController.prototype.renderAll = function() {
      var compiled, header, key, model;
      compiled = (function() {
        var _ref, _results;
        _ref = this.models;
        _results = [];
        for (key in _ref) {
          model = _ref[key];
          _results.push(this.listTemplate(model));
        }
        return _results;
      }).call(this);
      this.el.html(compiled.join(" "));
      header = "<section class=\"normal\">\n  <h1><strong>PedU</strong></h1>\n</section>";
      this.el.prepend(header);
      return this.startList(this.models);
    };

    UniversityController.prototype.listTemplate = function(model) {
      return "<section class=\"school normal\">\n  <div class=\"image\">\n    <figure>\n      <img src=\"" + (model.image_url || '//placehold.it/128.png') + "\" />\n    </figure>\n  </div>\n\n  <div class=\"content\">\n    <header>\n      <div class=\"name\">" + model.name + "</div class=\"name\">\n      <div class=\"location\">Kampala, Uganda</div>\n    </header>\n    <p>" + model.definition_of_service + "</p>\n  </div>\n</section>";
    };

    UniversityController.prototype.itemTemplate = function(model) {};

    return UniversityController;

  })(window.App.Controller);

  window.App.UniversityController = UniversityController;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var Wordpress,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Wordpress = (function(_super) {

    __extends(Wordpress, _super);

    function Wordpress(opts) {
      Wordpress.__super__.constructor.call(this, opts);
      this.el = opts.element;
      opts.lat || (opts.lat = 1.37);
      opts.lng || (opts.lng = 32.29);
      this.defaultZoom = opts.zoom || 13;
      this.styleUrl = opts.styleUrl || "http://{s}.tile.cloudmade.com/703a104d15d44e2885f6cedeaaec6d30/78177/256/{z}/{x}/{y}.png";
      this.center = new L.LatLng(opts.lat, opts.lng);
      this.setupMap();
    }

    Wordpress.prototype.setupMap = function() {
      this.map = L.map(this.el, {
        zoom: 13
      });
      this.map.setView(this.center, this.defaultZoom);
      this.mainTileLayer = L.tileLayer(this.styleUrl);
      return this.mainTileLayer.addTo(this.map);
    };

    return Wordpress;

  })(window.App.Model);

  window.App.Wordpress = Wordpress;

}).call(this);
// Generated by CoffeeScript 1.3.3
(function() {
  var WordpressFeed,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  google.load('feeds', 1);

  WordpressFeed = (function(_super) {

    __extends(WordpressFeed, _super);

    WordpressFeed.base_url = "https://pangeaeducation.wordpress.com/category/";

    WordpressFeed.feeds = {};

    WordpressFeed.fetch = function(number, feed) {
      if (number == null) {
        number = 10;
      }
      if (feed == null) {
        feed = "blog";
      }
      WordpressFeed.feeds[feed] = new google.feeds.Feed("" + WordpressFeed.base_url + feed + "/feed/");
      WordpressFeed.feeds[feed].setNumEntries(number);
      return WordpressFeed.feeds[feed].load(function(results) {
        var entry, feedEntries, _i, _len, _ref;
        if (!results.error) {
          feedEntries = new Array;
          _ref = results.feed.entries;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            entry = _ref[_i];
            feedEntries.push(new WordpressFeed(entry));
          }
          return WordpressFeed.trigger("feed-loaded:" + feed, feedEntries);
        }
      });
    };

    function WordpressFeed(entry) {
      console.log(entry);
      this.title = entry.title;
      this.url = entry.link;
      this.description = entry.contentSnippet;
      this.content = entry.content;
      this.date = new Date(entry.publishedDate);
      this.linkText = "Learn More";
      this.image = entry.mediaGroups[0].contents[1].url.split('?')[0] + "?w=1000" || "http://placehold.it/1000x400";
    }

    return WordpressFeed;

  }).call(this, window.App.Events);

  window.App.WordpressFeed = WordpressFeed;

}).call(this);
